-- MySQL dump 10.13  Distrib 5.7.33, for Linux (x86_64)
--
-- Host: localhost    Database: dashan_db
-- ------------------------------------------------------
-- Server version	5.7.33

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `t_txt`
--

DROP TABLE IF EXISTS `t_txt`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_txt` (
  `tid` bigint(20) NOT NULL AUTO_INCREMENT COMMENT '文本ID',
  `uid` char(100) COLLATE utf8_unicode_ci NOT NULL,
  `tgroup` char(130) COLLATE utf8_unicode_ci NOT NULL DEFAULT '默认',
  `ttit` varchar(255) COLLATE utf8_unicode_ci NOT NULL COMMENT '文本标题',
  `tcont` mediumtext COLLATE utf8_unicode_ci NOT NULL COMMENT '文本内容',
  `tdate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `tprivate` int(11) NOT NULL DEFAULT '1',
  PRIMARY KEY (`tid`)
) ENGINE=InnoDB AUTO_INCREMENT=37 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_txt`
--

LOCK TABLES `t_txt` WRITE;
/*!40000 ALTER TABLE `t_txt` DISABLE KEYS */;
INSERT INTO `t_txt` VALUES (1,'1','默认','我的记事本(标题不可修改)','<pre><code>\r\n快递单号：YT5222381379984\r\n是\r\n\r\ncrontab编辑器：\r\nexport EDITOR=\"/usr/bin/vim\" ; crontab -e\r\n\r\njavascript:\r\nhttps://blog.csdn.net/jenyzhang/article/details/48777251\r\nhttps://www.shuzhiduo.com/A/q4zVjN2GzK/\r\n\r\n签名\r\nhttps://zhuanlan.zhihu.com/p/255049399\r\n</code></pre>','2021-01-25 08:23:35',0),(2,'1','命运','出生时间的秘密与人类命运的规律','    人有60亿，八字只有50多万种。60亿人，只有50多万种命运。《乾元秘旨》曰：“凡大富大贵之命，往往世不偶生，而贫贱者恒层叠出，何欤？盖天地精华，独酝酿于此一日，发泄于此一时。譬诸祥麟彩凤，原不多见，若泛泛化生于阴阳五行之内，不啻吠犬鸣鸡，何地无之。”\r\n    翻译：就是说大富大贵之命，世不偶生，出生的时候，同一时间也极少其他人出生，这类人的八字极少，大富大贵八字格局奇佳，难得一见，可遇不可求。同样时间出生的大命，一般1到3岁的时候，往往大病降临，这种病一般是要命的，十有九死，死了的那些生命就是福气不够了，死不了的就是大命了，所谓大难不死，必有后福。“不啻吠犬鸣鸡，何地无之”普通命，跟鸡狗一样，同一时间出生的人极多，哪里见不到呢。所以我们发现，双胞胎也是偶生，所以双胞胎大多也是普通命，大富大贵的双胞胎极少。\r\n    \r\n    我们发现八字，普通命的八字太多。富贵命的八字太少。八字充分反映出一个人与生俱来的福分，人的福气分成三六九等，并非八字本身会分配，人的出生时间是自己的因缘感应所致，人的出生的看似偶然，实际是福分大小的反映。虽然人的福分有三六九等，但人与人之间的相处，应该要平等的。人的大运十年一变，十年河西，十年河东。今天的锻炼，或者是明天的福气。今天的富贵，或者造成明天的贫贱。风水轮流转，祸福相依。古人云：“疑似之迹，不可不察。”指不被事物相似的表面现象所迷惑。\r\n\r\n    人有大命，所以古人说有虎命，龙命，鹤命，大命很少有，大命出生的时候，同一时间也极少其他人出生，跟老虎一样，每1到2年只生一胎而已。\r\n差命一大堆，扎堆而生，跟老鼠一样，同一时间出生的人极多，一生就一大窝，朝生暮死，醉生梦死，天地间的秘密和真理，小命们又知道多少呢，但是小命们有时凭人多势众却能主导这个社会，比如文革十年就这样，是流氓的天堂。\r\n    当然大命得看整体的八字结构了，跟属相无任何关系的。人中龙凤，万人之上，大富大贵的命，其因缘也殊胜的，其思想也奇异，很多大富大贵的人，思想格局很大，必有过人之处。\r\n\r\n60亿人，只有50多万种命运，人生的轨迹只有50多万种，所以相同八字的人的命运轨迹是很相似的，譬如3个相同八字的人，比如这一年霉运，有的可能失业、有的可能小破财，有的可能生病，有的可能出现身体的伤害，霉运时相同的，但是具体什么霉不一样的。\r\n譬如3个相同八字的人，比如这一年好运，有的可能发财、有的可能移民去美国（移民到发达国家也是一种财，成功移民那一年的财就抵消了，美国是生活优越的地方，美国低层的人，跟中国农村底层的人，不是一回事。不是人人能过美国的。移民美国，对于很多人来讲是天方夜谭），有的可能找到一个美女老婆，有的可能会学到一门高级的学问。\r\n    古人云：正财者，驿马也、妻也，才也。偏财者，驿马也，女人也，妾也，才也。\r\n    古人的富豪，妻妾多达几个到几十个，皇帝有后宫佳丽三千。\r\n\r\n八字与时俱进，当代人。老婆只得一个，偏财旺的人，变成招很多女人喜欢，人品差的富豪就出轨了，人品好的富豪，就控制得住。\r\n地域不同，差别也大。譬如相同八字的人，命中都有3个小孩，但是生于北方，计划生育严格，大多只有一胎。生在广东的潮汕地区，就最少得有3个。虽然个数不同，但是事业、财运、婚恋其他还是一样的。\r\n  譬如相同八字的人，在二十岁此年有婚恋的信息，在农村此年就会结婚了。在城市读大学的话，就会恋爱了。在欧美的话，必定要上床的，但绝对不结婚，欧美人大多晚婚。此年在国内发展，女友是中国人。此年在欧美留学，女友就是老外了。虽然恋爱是一样的，但机会不一样了\r\n\r\n  ，所以命运不是宿命的。此年如果有婚灾，不爱没事，一爱就出事。所以算命有明确规定，有人适合晚婚，早婚会有婚灾，不知道的话，人就被情所伤，这是很常见的。所以命运不是宿命的。有的人说我这辈子会有几个男人，这是也是不固定的，姻缘出现的时候，人来追你，你错  过了，你就没有。姻缘不是时时有的，一般的人，一辈子就只有几次的机会而已，错过了就没有。“我这辈子会有几个男人”这在古代的话，没女人敢问的。当代的话，很多女人都喜欢问这个，欧美人问这个就更加喜欢了。八字也要与时俱进的。\r\n所以相同八字的人，粗算每年的运气，发生的事是一样的，一生的起伏、财运大小、事业大小、婚姻也是一样的。譬如好运的流年，就是工作顺利，事业突破，财运翻倍，发财，有人来追求。全部是一样的。\r\n\r\n    但是相同八字的人，细算每年的运气，发生的具体何事就可能不一样了。譬如霉运因木受克的人，可能肝生病，可能破财，可能失业，可能家破，可能亲人生大病连累到自己。算准这个需要人的灵感，不过凭灵感就是算出今年发现的具体事情，譬如凭灵感能算出某年突然阳痿，但也不可能算出其他年份的具体事情，譬如某年一块石头从天而降，扎伤屁股。所以算这个无太大意义的。如果人人一样的话，那么人就是机器人了，面部一样，体重一样，手纹一样，每年发生的事都一模一样，这就是很宿命、很悲观、智商很低的人了。\r\n有的看了某某大师的算八字经典命例，说算得吃饭吃什么饭菜，具体得很厉害，结果自己去算，变成偷鸡不成蚀把米了。那是不合常理的。其实很多人，生活大多数时间都是很平淡的，哪有每个月都有不同的事情发生呢。\r\n\r\n    人有60亿，八字只有50多万种。所以相同八字的人，粗算一生财运起伏变化、一生的事业起伏变化、财运大小、事业大小、婚姻、是很相似的。不是相同的，只是很相似。\r\n细算的话，就有很多不同了，譬如那一年，相同八字的人工作和事业都很顺利，但是职业不一定相同。古人发明算命的时候，根本没有电脑行业、没有淘宝网、没有好声音、目前职业过万种，不可能一样的。\r\n\r\n    譬如那一年，相同八字的人都发财了，但具体做什么来发财也不一样的。\r\n八字却确实有一部分的人，人生的职业是规定好的，他自己没有选择的，譬如很多当官的、矿主、船主，有的人八字的格局气势明显，职业也是固定的，可以算出他的职业。大多数的人的八字就不是了，所以有的人这辈子做过很多行业，甚至做过几十种不同的工作。这就不能算出的。\r\n    相同八字的人，命运是相似，福报也是相似的，但不是相同的。生活中处处可见。命运有时可以改善的，一般小灾易躲，大灾难防。小财运易转运，大财、横财、偏财都是注定的，命无横财的人，没有人可以求到横财。同样，命带横财的人，我不求富贵，富贵逼人来。目前发现，命带横财的人，横财到的时候，真的是不求自得，天天坐在家里打麻将，不干活也有横财的，你看那些征地暴富的农民。命无横财，求得跳楼也没钱的，你看那些炒股而跳楼的。\r\n\r\n    如果一个人发现与自己同年同月同日生同时生的人越多，超多，就恭喜你了，送你一个悲催奖。因为物以稀为贵，八字也是一样的。大富大贵的八字难得一见，就譬如刘德华就只有一个，13亿人，全中国的大明星也没有1000个。但是普工一大堆，富士康手头上的普工就一百多万，连吃个便饭也要排队的，住几万元一晚的顶级酒店是很遥远的事情。刘德华住顶级酒店是很遥远的事情吗？人与人之间，福气之不同，不可思议。古人云，乐天知命故不忧。无财去炒股，会导致跳楼收场。无姻缘时盲目去爱，会导致婚姻不幸。凡事知命则安。有备无患。下雨前记得带伞。事先知道前面有个坎，得绕过去，否则就扑街了。我们算八字发现人的命运不是迷信的，不是宿命的，不是盲目的，是一种很理性的命运观点。但愿这个世界欢乐多一点，悲催少一点。南无阿弥陀佛，南无观世音菩萨。','2021-01-24 01:16:03',1),(3,'1','网络','Bootstrap v4','利用 BootstrapCDN 和一个最简模板快速上手 Bootstrap。Bootstrap 是全球最流行的前端框架，用于构建响应式、移动设备优先的 WEB 站点。<pre><code>&lt;!doctype html&gt;\r\n&lt;html lang=\"en\"&gt;\r\n  &lt;head&gt;\r\n    &lt;!-- Required meta tags --&gt;\r\n    &lt;meta charset=\"utf-8\"&gt;\r\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"&gt;\r\n\r\n    &lt;!-- Bootstrap CSS --&gt;\r\n    &lt;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossorigin=\"anonymous\"&gt;\r\n\r\n    &lt;title&gt;Hello, world!&lt;/title&gt;\r\n  &lt;/head&gt;\r\n  &lt;body&gt;\r\n    &lt;h1&gt;Hello, world!&lt;/h1&gt;\r\n\r\n    &lt;!-- Optional JavaScript --&gt;\r\n    &lt;!-- jQuery first, then Popper.js, then Bootstrap JS --&gt;\r\n    &lt;script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\r\n    &lt;script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\r\n    &lt;script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.min.js\" integrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\" crossorigin=\"anonymous\"&gt;&lt;/script&gt;\r\n  &lt;/body&gt;\r\n&lt;/html&gt;</code></pre>','2021-01-24 01:17:06',1),(29,'1','网络','Nginx 安装','<pre><code>\r\n#!/bin/bash\r\n\r\ncd /tmp\r\nmkdir -p /usr/local/nginx/conf.d\r\nsed -i \'s/=enforcing/=disabled/g\' /etc/selinux/config\r\n    systemctl start firewalld\r\n    firewall-cmd --list-all\r\n    firewall-cmd --add-service=http\r\n    firewall-cmd --add-port=19631/tcp\r\n    firewall-cmd --add-service=https\r\n    firewall-cmd --runtime-to-permanent\r\n    firewall-cmd --reload\r\n    systemctl restart firewalld \r\n    systemctl enable firewalld \r\n    systemctl stop firewalld\r\n\r\nyum install -y  wget gcc gcc-c++ vim libtool zip perl-core zlib-devel wget pcre* unzip automake autoconf make curl vim\r\n### 开始安装 nginx\r\ncd /tmp\r\nwget https://www.openssl.org/source/openssl-1.1.1a.tar.gz\r\ntar xzvf openssl-1.1.1a.tar.gz \r\n#wget https://nginx.org/download/nginx-1.15.8.tar.gz && tar xf nginx-1.15.8.tar.gz && rm nginx-1.15.8.tar.gz && cd nginx-1.15.8\r\nwget https://nginx.org/download/nginx-1.18.0.tar.gz && tar xf nginx-1.18.0.tar.gz && rm nginx-1.18.0.tar.gz && cd nginx-1.18.0\r\n./configure --prefix=/usr/local/nginx --with-openssl=../openssl-1.1.1a --with-openssl-opt=\'enable-tls1_3\' \\\r\n--with-http_v2_module --with-http_ssl_module --with-http_gzip_static_module --with-http_stub_status_module \\\r\n--with-http_sub_module --with-stream --with-stream_ssl_module\r\nmake && make install\r\n\r\n###nginx 启动\r\ncat &gt;/etc/systemd/system/nginx.service&lt;&lt;-EOF\r\n[Unit]\r\nDescription=nginx\r\nAfter=network.target\r\n[Service]\r\nType=forking\r\nExecStart=/usr/local/nginx/sbin/nginx\r\nExecReload=/usr/local/nginx/sbin/nginx -s reload\r\nExecStop=/usr/local/nginx/sbin/nginx -s quit\r\nPrivateTmp=true\r\n[Install]\r\nWantedBy=multi-user.target\r\nEOF\r\n\r\nsystemctl start v2ray.service\r\nsystemctl enable v2ray.service\r\nsystemctl status v2ray.service\r\n/usr/local/nginx/sbin/nginx -t\r\n</code></pre>','2021-01-24 13:39:02',0),(30,'1','网络','HTTPS Certbot... acme qSSL证书','certbot:\r\n<pre><code>###安装。根据官方安装\r\nyum remove epel-release\r\nyum install -y epel-release\r\nyum install -y certbot python2-certbot-nginx\r\n \r\n###出错就解决\r\npip install --upgrade --force-reinstall \'requests==2.6.0\' urllib3\r\n \r\n###单域名证书\r\ncertbot certonly --webroot -w /usr/local/nginx/html/ -d baidu.com -m 0@yahoo.com --agree-tos --test-cert -n    ### --test-cert测试模式 -n不交互\r\n \r\n###通配符域名证书\r\ncertbot -d baidu.cn -d \'*.baidu.com\' --manual --preferred-challenges dns-01 --server https://acme-v02.api.letsencrypt.org/directory certonly \\\r\n-m 123@gmail.com --agree-tos\r\n \r\n###自动通配符证书，需要域名验证\r\nwget https://dl.eff.org/certbot-auto && chmod a+x certbot-auto\r\n./certbot-auto -d \'*.baidu.com\' --manual --preferred-challenges dns-01 certonly -m 1233@qq.com --agree-tos \\\r\n--server https://acme-v02.api.letsencrypt.org/directory\r\n \r\n###续费\r\necho \'5 4 * * 2 /usr/bin/certbot renew --dry-run \"/usr/local/nginx/sbin/nginx -s reload\"\' &gt;&gt; /var/spool/cron/root\r\n###删除\r\ncertbot certificates\r\ncertbot delete --cert-name example.com\r\n\r\n</code></pre>\r\n\r\nacme.sh:\r\n<pre><code>1.安装：\r\nwget -O -  https://get.acme.sh | sh\r\nacme.sh -h  ###检查\r\n~/.acme.sh/dnsapi/  ###支持的DNS\r\n \r\n2.DNS解析添加KEY：\r\n阿里云：https://ak-console.aliyun.com/#/accesskey\r\n~/.bashrc文件中添加阿里云的“AccessKey ID”和“Access Key Secret”\r\nexport Ali_Key=\"sdfsdfsdfljlbjkljlkjsdfoiwje\"\r\nexport Ali_Secret=\"jlsdflanljkljlfdsaklkjflsa\"\r\n \r\nCloundFlare获取证书：MyProfile中Global API key和Origin API key\r\n~/.bashrc文件中添加这个两个变量\r\nexport [email protected]\r\nexport CF_Key=85302dsiorw3oisjdkf899234sdf72dfdb46\r\n \r\n3.安装证书：\r\nacme.sh --issue --dns dns_cf -d domain.com -d \'*.domain.com\'   \r\n### 制定DNS和域名，dns_cf是CloudFlare\r\n \r\n4.拷贝证书到nginx目录\r\nacme.sh --install-cert -d \'domain.com\' --key-file /usr/local/nginx/ssl/domain.com/private.pem --fullchain-file /usr/local/nginx/ssl/domain.com/fullchain.pem \\\r\n--reloadcmd \"nginx -s reload\"\r\n \r\n5.自动续期\r\n0 0 * * * \"/root/.acme.sh\"\r\n1.安装：\r\nwget -O -  https://get.acme.sh | sh\r\nacme.sh -h  ###检查\r\n~/.acme.sh/dnsapi/  ###支持的DNS\r\n \r\n2.DNS解析添加KEY：\r\n阿里云：https://ak-console.aliyun.com/#/accesskey\r\n~/.bashrc文件中添加阿里云的“AccessKey ID”和“Access Key Secret”\r\nexport Ali_Key=\"sdfsdfsdfljlbjkljlkjsdfoiwje\"\r\nexport Ali_Secret=\"jlsdflanljkljlfdsaklkjflsa\"\r\n \r\nCloundFlare获取证书：MyProfile中Global API key和Origin API key\r\n~/.bashrc文件中添加这个两个变量\r\nexport [email protected]\r\nexport CF_Key=85302dsiorw3oisjdkf899234sdf72dfdb46\r\n \r\n3.安装证书：\r\nacme.sh --issue --dns dns_cf -d domain.com -d \'*.domain.com\'   \r\n### 制定DNS和域名，dns_cf是CloudFlare\r\n \r\n4.拷贝证书到nginx目录\r\nacme.sh --install-cert -d \'domain.com\' --key-file /usr/local/nginx/ssl/domain.com/private.pem --fullchain-file /usr/local/nginx/ssl/domain.com/fullchain.pem \\\r\n--reloadcmd \"nginx -s reload\"\r\n \r\n5.自动续期\r\n0 0 * * * \"/root/.acme.sh\"/acme.sh --cron --home \"/root/.acme.sh\" &gt;&gt; /var/log/acme.sh-auto-renew.log\r\nacme.sh --cron  ###续期情\r\n/acme.sh --cron --home \"/root/.acme.sh\" &gt;&gt; /var/log/acme.sh-auto-renew.log\r\nacme.sh --cron  ###续期情\r\n\r\n</code></pre>','2021-01-24 13:38:46',0),(32,'1','语言','JavaScript 实用例子 ','<pre><code>/////定时任务\r\nvar n = 0;\r\nsetTimeout(function(){ n++; console.log(n); },1000);    //执行一次\r\nsetInterval(function(){ n++; console.log(n); },1000);   //每一秒执行一次\r\n</code></pre>','2021-01-25 02:33:17',1),(33,'1','语言','PHP常用 ','全局配置：\r\n<pre><code>//开启session\r\nsession_start(); \r\n//打开缓冲区  header用时候\r\nob_start(); \r\n//跳转到 index.php\r\nheader(\"location: index.php\"); \r\n</code></pre>\r\n\r\n数组：\r\n<pre><code>\r\n$arr = explode(\'/\', $str);  //用\'/\'分数组\r\nend($arr);  //数组最后一个元素\r\nreset($arr);  //数组第一个元素\r\n</code></pre>\r\n\r\n字符串：\r\n<pre><code>//截取.MP3 \r\necho strstr(\'FILE.MP3\',\'.\');	\r\n//获取FILE\r\necho strstr(\'FILE.MP3\',\'.\',true);	\r\n//字符串替换\r\necho str_replace(\'W\',\'*\',\"Hello Word!\");  \r\n//返回字符串中出现的位置，没有就返回false\r\necho strpos(\"Hello Word\",\"X\");	\r\n//转为字符串\r\nstrval(\"12312\");\r\n\r\n//json编码中文不乱码\r\necho json_encode($arr,JSON_UNESCAPED_UNICODE);	\r\n//解码json\r\njson_decode();	\r\n</code></pre>\r\n\r\n目录：\r\n<pre><code>echo var_dump(glob(\"/*\"));  //根目录下所有文件\r\n//如果是目录返回1,否则无\r\necho is_dir(\"/boot\");  \r\n//文件是否存在就返回1\r\necho file_exists(\"/boot\");\r\n</code></pre>\r\n\r\n数字：\r\n<pre><code>//转为数字\r\necho number_format(\"23\");\r\n//生成五位随机数字\r\necho mt_rand(10000,90000);\r\n</code></pre>\r\n\r\n数据库：\r\n<pre><code>\r\n</code></pre>\r\n\r\ncurl：\r\n<pre><code>\r\n</code></pre>','2021-01-25 03:31:05',1),(34,'1','语言','PHP7.3安装','<pre><code>\r\ncd /tmp && wget https://www.php.net/distributions/php-7.3.5.tar.gz &&  tar -zxvf php-7.3.5.tar.gz && cd php-7.3.5\r\n\r\n########################################## centos 7系列 ##########################################\r\n# yum install -y gcc gcc-c++ make automake  libxml2 libxml2-devel openssl openssl-devel bzip2 bzip2-devel libcurl libcurl-devel libjpeg \\\r\n# libjpeg-devel libpng libpng-devel freetype freetype-devel gmp gmp-devel libmcrypt libmcrypt-devel readline readline-devel libxslt \\\r\n# libxslt-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel ncurses curl gdbm-devel db4-devel libXpm-devel libX11-devel gd-devel \\\r\n# gmp-devel expat-devel xmlrpc-c xmlrpc-c-devel libicu-devel libmcrypt-devel libmemcached-devel\r\n\r\n\r\n# 1\r\nwget https://cmake.org/files/v3.12/cmake-3.12.0-rc1.tar.gz && tar -zxvf cmake-3.12.0-rc1.tar.gz && cd cmake-3.12.0-rc1 \r\n./bootstrap && gmake && gmake install\r\n\r\n# 2\r\nwget https://libzip.org/download/libzip-1.5.2.tar.gz && tar -zxf libzip-1.5.2.tar.gz\r\ncd libzip-1.5.2 && mkdir build && cd build \r\ncmake .. && make && make install\r\n\r\n#如果内存错误就加上 --disable-fileinfo\r\n# ./configure --prefix=/usr/local/php --with-config-file-path=/usr/local/php/etc --with-fpm-user=www --with-fpm-group=www --with-curl --with-freetype-dir --with-gd \\\r\n# --with-gettext --with-iconv-dir --with-kerberos --with-libdir=lib64 --with-libxml-dir --with-mysqli --with-openssl --with-pcre-regex --with-pdo-mysql \\\r\n# --with-pdo-sqlite --with-pear --with-png-dir --with-jpeg-dir --with-xmlrpc --with-xsl --with-zlib -with-bz2 --with-mhash --enable-fpm --enable-bcmath \\\r\n# --enable-libxml --enable-inline-optimization --enable-mbregex --enable-mbstring --enable-opcache --enable-pcntl --enable-shmop --enable-soap \\\r\n# --enable-sockets --enable-sysvsem --enable-sysvshm --enable-xml --enable-zip --enable-fpm --disable-fileinfo\r\n\r\n\r\n\r\nyum -y install gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc \\\r\nglibc-devel glib2 glib2-devel bzip2 bzip2-devel ncurses ncurses-devel curl curl-devel e2fsprogs e2fsprogs-devel krb5 krb5-devel libidn libidn-devel \\\r\nopenssl openssl-devel openldap openldap-devel nss_ldap openldap-clients openldap-servers gd gd2 gd-devel gd2-devel perl-CPAN pcre-devel\r\n\r\n# ./configure --prefix=/usr/local/php --exec-prefix=/usr/local/php --bindir=/usr/local/php/bin --sbindir=/usr/local/php/sbin --includedir=/usr/local/php/include \\\r\n# --libdir=/usr/local/php/lib/php --mandir=/usr/local/php/php/man --with-config-file-path=/usr/local/php/etc --with-mysql-sock=/tmp/mysql.sock --with-mhash --with-openssl \\\r\n# --with-mysqli=shared,mysqlnd --with-pdo-mysql=shared,mysqlnd --with-gd --with-iconv --with-zlib --enable-zip --enable-inline-optimization  --disable-debug --disable-rpath --enable-shared \\\r\n# --enable-xml --enable-bcmath --enable-shmop --enable-sysvsem --enable-mbregex --enable-mbstring --enable-ftp --enable-pcntl --enable-sockets --with-xmlrpc --enable-soap --without-pear \\\r\n# --with-gettext --enable-session --with-curl  --with-jpeg-dir --with-freetype-dir  --enable-opcache --enable-fpm --with-fpm-user=www --with-fpm-group=www  --without-gdbm \\\r\n# --enable-fast-install --disable-fileinfo\r\n\r\n\r\n./configure --prefix=/usr/local/php --exec-prefix=/usr/local/php --bindir=/usr/local/php/bin --sbindir=/usr/local/php/sbin --includedir=/usr/local/php/include \\\r\n--libdir=/usr/local/php/lib/php --mandir=/usr/local/php/php/man --with-config-file-path=/usr/local/php/etc --with-mhash --with-openssl \\\r\n--with-mysqli --with-pdo-mysql --with-gd --with-iconv --with-zlib --enable-zip --enable-inline-optimization  --disable-debug --disable-rpath --enable-shared \\\r\n--enable-xml --enable-bcmath --enable-shmop --enable-sysvsem --enable-mbregex --enable-mbstring --enable-ftp --enable-pcntl --enable-sockets --with-xmlrpc --enable-soap --without-pear \\\r\n--with-gettext --enable-session --with-curl  --with-jpeg-dir --with-freetype-dir  --enable-opcache --enable-fpm --with-fpm-user=www --with-fpm-group=www  --without-gdbm \\\r\n--enable-fast-install --disable-fileinfo\r\n\r\n\r\n###如果 error: off_t undefined; check your library configuration\r\nvim /etc/ld.so.conf\r\n#添加如下几行\r\n/usr/local/lib64\r\n/usr/local/lib\r\n/usr/lib\r\n/usr/lib64\r\n#保存退出\r\nldconfig -v # 使之生效\r\n\r\n\r\n\r\n\r\n########################################## ubuntu 18系列 ##########################################\r\n\r\n# 安装依赖\r\napt update\r\napt install gcc make openssl curl libbz2-dev libxml2-dev libjpeg-dev libpng-dev libfreetype6-dev libzip-dev libcurl4-gnutls-dev libssl-dev -y \r\n\r\n# 编译\r\n./configure --prefix=/usr/local/php  --enable-fpm --with-fpm-user=www --with-fpm-group=www --with-mysqli --with-pdo-mysql --with-iconv-dir \\\r\n--with-freetype-dir --with-jpeg-dir --with-png-dir --with-zlib --with-libxml-dir=/usr --enable-xml --disable-rpath --enable-bcmath --enable-shmop \\\r\n--enable-sysvsem --enable-inline-optimization --with-curl --enable-mbregex --enable-mbstring --enable-ftp --with-gd --with-openssl --with-mhash \\\r\n--enable-pcntl --enable-sockets --with-xmlrpc --enable-zip --enable-soap --without-pear --with-gettext --disable-fileinfo --enable-maintainer-zts\r\n\r\n########################################## 通用安装 ##########################################\r\n\r\n#  run \'make test\'时候成功\r\nmake \r\nmake install\r\n# 安装\r\n\r\n\r\n# 配置\r\ncp php.ini-development /usr/local/php/etc/php.ini\r\ncd /usr/local/php/etc/ && cp php-fpm.conf.default php-fpm.conf\r\ncd php-fpm.d && cp www.conf.default www.conf\r\n\r\ngroupadd www && useradd -g www www\r\n\r\n\r\n# 启动\r\n/usr/local/php/sbin/php-fpm\r\n\r\n###nginx 启动\r\ncat >/etc/systemd/system/php-fpm.service<<-EOF\r\n[Unit]\r\nDescription=php-fpm\r\nAfter=network.target\r\n[Service]\r\nType=forking\r\nExecStart=/usr/local/php/sbin/php-fpm\r\nExecReload=/usr/bin/killall /usr/local/php/sbin/php-fpm && /usr/local/php/sbin/php-fpm\r\nExecStop=/usr/bin/killall /usr/local/php/sbin/php-fpm\r\nPrivateTmp=true\r\n[Install]\r\nWantedBy=multi-user.target\r\nEOF\r\n\r\n# 验证 \r\nps -ef | grep php-fpm\r\n\r\n# Nginx php配置\r\nlocation ~ \\.php$ {\r\n	fastcgi_pass 127.0.0.1:9000;\r\n	fastcgi_index index.php;\r\n	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\r\n	include fastcgi_params;\r\n}\r\nsystemctl restart php-fpm.service\r\nsystemctl status php-fpm.service\r\nsystemctl enable php-fpm.service\r\n\r\n</code></pre>','2021-01-25 04:15:41',1),(35,'1','语言','Nginx 安装','<pre><code>\r\n#!/bin/bash\r\n##########################################redhang系列##########################################\r\nsystemctl start firewalld\r\nfirewall-cmd --list-all\r\nfirewall-cmd --add-service=http\r\nfirewall-cmd --add-service=https\r\nfirewall-cmd --add-port=19611/tcp\r\nfirewall-cmd --runtime-to-permanent\r\nfirewall-cmd --reload\r\nsystemctl restart firewalld \r\nsystemctl stop firewalld\r\n\r\nyum install -y  wget gcc gcc-c++ vim libtool zip perl-core zlib-devel wget pcre* unzip automake autoconf make curl vim\r\n##########################################ubuntu系列##########################################\r\napt-get update \r\n    apt-get install curl gcc zip vim wget unzip build-essential libtool zlib1g-dev libpcre3 libpcre3-dev libssl-dev automake autoconf make -y\r\n    wget http://www.cpan.org/src/5.0/perl-5.26.1.tar.gz\r\n    tar -xzf perl-5.26.1.tar.gz\r\n    cd perl-5.26.1\r\n    mkdir /usr/local/perl\r\n    ./Configure -des -Dprefix=/usr/local/perl\r\n    make && make install\r\n\r\n\r\n\r\n##########################################通用安装##########################################\r\ncd /tmp\r\n### 初始化 ### \r\nmkdir -p /usr/local/nginx/conf.d\r\nsed -i \'s/=enforcing/=disabled/g\' /etc/selinux/config\r\n\r\n### 开始安装 nginx\r\ncd /tmp\r\nwget https://www.openssl.org/source/openssl-1.1.1a.tar.gz\r\ntar xzvf openssl-1.1.1a.tar.gz \r\n#wget https://nginx.org/download/nginx-1.15.8.tar.gz && tar xf nginx-1.15.8.tar.gz && rm nginx-1.15.8.tar.gz && cd nginx-1.15.8\r\nwget https://nginx.org/download/nginx-1.18.0.tar.gz && tar xf nginx-1.18.0.tar.gz && rm nginx-1.18.0.tar.gz && cd nginx-1.18.0\r\n./configure --prefix=/usr/local/nginx --with-openssl=../openssl-1.1.1a --with-openssl-opt=\'enable-tls1_3\' \\\r\n--with-http_v2_module --with-http_ssl_module --with-http_gzip_static_module --with-http_stub_status_module \\\r\n--with-http_sub_module --with-stream --with-stream_ssl_module\r\nmake && make install\r\n\r\n\r\n###nginx 启动\r\ncat &gt;/etc/systemd/system/nginx.service&lt;&lt;-EOF\r\n[Unit]\r\nDescription=nginx\r\nAfter=network.target\r\n[Service]\r\nType=forking\r\nExecStart=/usr/local/nginx/sbin/nginx\r\nExecReload=/usr/local/nginx/sbin/nginx -s reload\r\nExecStop=/usr/local/nginx/sbin/nginx -s quit\r\nPrivateTmp=true\r\n[Install]\r\nWantedBy=multi-user.target\r\nEOF\r\n\r\nsystemctl start nginx.service\r\nsystemctl enable nginx.service\r\nsystemctl status nginx.service\r\n/usr/local/nginx/sbin/nginx -t\r\n</code></pre>','2021-01-25 04:26:04',1),(36,'1','默认','++标题++','++代码语言写在<pre><code>my code</code></pre>标签内++','2021-01-25 04:30:06',1);
/*!40000 ALTER TABLE `t_txt` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `t_user`
--

DROP TABLE IF EXISTS `t_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `t_user` (
  `uid` bigint(20) NOT NULL AUTO_INCREMENT,
  `username` char(100) COLLATE utf8_unicode_ci NOT NULL,
  `passwd` char(100) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`uid`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `t_user`
--

LOCK TABLES `t_user` WRITE;
/*!40000 ALTER TABLE `t_user` DISABLE KEYS */;
INSERT INTO `t_user` VALUES (1,'admin','744a9a8799bc3fa5b5e746a7f800371b');
/*!40000 ALTER TABLE `t_user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2021-01-25  8:51:30
